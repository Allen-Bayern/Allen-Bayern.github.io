{"hash":"9187bc8dd5b9762f5b3e8876d44b06362198e899","data":{"post":{"id":"cdb0171e473a7386ef28c07180425d8b","title":"何为长轮询? 如何实现一个长轮询?","content":"<h2 id=\"1-首先搞清几个问题\"><a href=\"#1-%E9%A6%96%E5%85%88%E6%90%9E%E6%B8%85%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. 首先搞清几个问题</h2>\n<ol>\n<li><strong>轮询</strong>: 英文为<code>polling</code>，不加定语时一般指<strong>短轮询</strong>或<strong>定期轮询</strong>，通俗地可以理解为应用A不断地向应用B询问结果，直到B向A返回结果。在前端场景的轮询是指浏览器每隔一段时间都要向服务器发送一次请求, 服务器收到请求后无论数据是否有更新都会响应请求。</li>\n<li><strong>长轮询</strong>: 英文为<code>long polling</code>，指在服务器接收到请求后先将这个请求Pending, 然后有消息的时候再返回数据。而客户端在<code>timeout</code>之前则一直挂起请求，达到<code>timeout</code>之后重新发送请求；或者在处理完返回的信息之后立即发送新请求。</li>\n</ol>\n<h2 id=\"2-简单封装一下axios\"><a href=\"#2-%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%8Baxios\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. 简单封装一下axios</h2>\n<p>由于下文均以<code>axios</code>为例，所以在此对<code>axios</code>简单封装。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">axios</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> requestInstance <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'X-Requested-With'</span><span class=\"token operator\">:</span> <span class=\"token string\">'XMLHttpRequest'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrequestInstance<span class=\"token punctuation\">.</span><span class=\"token property-access\">interceptors</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">request</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">post</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    token <span class=\"token operator\">&amp;&amp;</span> config<span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">common</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">return</span> config<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">error</span> <span class=\"token arrow operator\">=></span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 核心函数</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">request</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> otherConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 处理method</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> method <span class=\"token operator\">=</span> <span class=\"token string\">'GET'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> otherConfig<span class=\"token punctuation\">;</span>\n    <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span>otherConfig<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> method<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 根据是否为get请求处理params</span>\n    <span class=\"token keyword\">const</span> assigned <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span>assigned<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> params<span class=\"token punctuation\">;</span>\n        <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span>assigned<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">requestInstance</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token spread operator\">...</span>assigned<span class=\"token punctuation\">,</span>\n            <span class=\"token spread operator\">...</span>otherConfig<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword control-flow\">return</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"3-短轮询的实现\"><a href=\"#3-%E7%9F%AD%E8%BD%AE%E8%AF%A2%E7%9A%84%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 短轮询的实现</h2>\n<p>假设这样一个api: <code>/api/opt/man</code>。</p>\n<p>用上面封装好的<code>request</code>函数实现如下:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@/utils/request'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 首先设置外围定时器</span>\n<span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">polling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/opt/man'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 每10秒轮一回</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            timer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 在setTimeout内部递归</span>\n            <span class=\"token function\">polling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 请求失败也继续轮询</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            timer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 一秒后重新连接</span>\n            <span class=\"token keyword control-flow\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 在setTimeout内部递归</span>\n            <span class=\"token function\">polling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"4-长轮询的实现\"><a href=\"#4-%E9%95%BF%E8%BD%AE%E8%AF%A2%E7%9A%84%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 长轮询的实现</h2>\n<p>长论询的流程为:</p>\n<ol>\n<li>向服务器发送请求</li>\n<li>服务器有数据前不关闭链接</li>\n<li>消息出现时服务器将对请求发出响应</li>\n<li>浏览器立即发出请求。</li>\n</ol>\n<p>大致实现如下:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> request <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@/utils/request'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">longPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/opt/man'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">30000</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// ...handle data</span>\n\n        <span class=\"token comment\">// 递归调用</span>\n        <span class=\"token function\">longPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> status <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span><span class=\"token property-access\">response</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 502为超时错误, 立即发出请求</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">502</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">longPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 其余时候等1秒再发</span>\n            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">longPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"reference\"><a href=\"#reference\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Reference</h2>\n<ol>\n<li><a href=\"https://www.cnblogs.com/huchong/p/8595644.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">轮询、长轮询、长连接、websocket</a></li>\n<li><a href=\"https://zh.javascript.info/long-polling\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">轮询</a></li>\n</ol>\n","date":"26 March 2023","timeToRead":3}},"context":{}}